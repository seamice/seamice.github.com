import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as u,c as m,e as i,w as e,b as a,d as s,f as o}from"./app-9af45965.js";const d={},b=o(`<h2 id="how-to-get-help" tabindex="-1"><a class="header-anchor" href="#how-to-get-help" aria-hidden="true">#</a> How to get help</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Parameters help:
  <span class="token parameter variable">-h</span>      -- print basic options
  <span class="token parameter variable">-h</span> long -- print <span class="token function">more</span> options
  <span class="token parameter variable">-h</span> full -- print all options <span class="token punctuation">(</span>including all <span class="token function">format</span> and codec specific options, very long<span class="token punctuation">)</span>
  <span class="token parameter variable">-h</span> <span class="token assign-left variable">type</span><span class="token operator">=</span>name -- print all options <span class="token keyword">for</span> the named decoder/encoder/demuxer/muxer/filter/bsf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basic-options" tabindex="-1"><a class="header-anchor" href="#basic-options" aria-hidden="true">#</a> Basic Options</h3>`,3),v=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[s("Global options "),a("span",{class:"token punctuation"},"("),s(`affect whole program instead of just one file:
`),a("span",{class:"token parameter variable"},"-loglevel"),s(" loglevel  "),a("span",{class:"token builtin class-name"},"set"),s(` logging level
`),a("span",{class:"token parameter variable"},"-v"),s(" loglevel         "),a("span",{class:"token builtin class-name"},"set"),s(` logging level
`),a("span",{class:"token parameter variable"},"-report"),s(`             generate a report
`),a("span",{class:"token parameter variable"},"-max_alloc"),s(" bytes    "),a("span",{class:"token builtin class-name"},"set"),s(` maximum size of a single allocated block
`),a("span",{class:"token parameter variable"},"-y"),s(`                  overwrite output files
`),a("span",{class:"token parameter variable"},"-n"),s(`                  never overwrite output files
`),a("span",{class:"token parameter variable"},"-ignore_unknown"),s(`     Ignore unknown stream types
`),a("span",{class:"token parameter variable"},"-filter_threads"),s(`     number of non-complex filter threads
`),a("span",{class:"token parameter variable"},"-filter_complex_threads"),s("  number of threads "),a("span",{class:"token keyword"},"for"),s(),a("span",{class:"token parameter variable"},"-filter_complex"),s(`
`),a("span",{class:"token parameter variable"},"-stats"),s(`              print progress report during encoding
`),a("span",{class:"token parameter variable"},"-max_error_rate"),s(" maximum error rate  ratio of errors "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0.0"),s(": no errors, "),a("span",{class:"token number"},"1.0"),s(": "),a("span",{class:"token number"},"100"),s("% errors"),a("span",{class:"token punctuation"},")"),s(" above "),a("span",{class:"token function"},"which"),s(` ffmpeg returns an error instead of success.
`),a("span",{class:"token parameter variable"},"-bits_per_raw_sample"),s(" number  "),a("span",{class:"token builtin class-name"},"set"),s(` the number of bits per raw sample
`),a("span",{class:"token parameter variable"},"-vol"),s(" volume         change audio volume "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"256"),a("span",{class:"token operator"},"="),s("normal"),a("span",{class:"token punctuation"},")"),s(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),k=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token parameter variable"},"-f"),s(),a("span",{class:"token function"},"fmt"),s("              force "),a("span",{class:"token function"},"format"),s(`
`),a("span",{class:"token parameter variable"},"-c"),s(` codec            codec name
`),a("span",{class:"token parameter variable"},"-codec"),s(` codec        codec name
`),a("span",{class:"token parameter variable"},"-pre"),s(` preset         preset name
`),a("span",{class:"token parameter variable"},"-map_metadata"),s(" outfile"),a("span",{class:"token punctuation"},"["),s(",metadata"),a("span",{class:"token punctuation"},"]"),s(":infile"),a("span",{class:"token punctuation"},"["),s(",metadata"),a("span",{class:"token punctuation"},"]"),s("  "),a("span",{class:"token builtin class-name"},"set"),s(` metadata information of outfile from infile
`),a("span",{class:"token parameter variable"},"-t"),s(" duration         record or transcode "),a("span",{class:"token string"},'"duration"'),s(` seconds of audio/video
`),a("span",{class:"token parameter variable"},"-to"),s(" time_stop       record or transcode stop "),a("span",{class:"token function"},"time"),s(`
`),a("span",{class:"token parameter variable"},"-fs"),s(" limit_size      "),a("span",{class:"token builtin class-name"},"set"),s(" the limit "),a("span",{class:"token function"},"file"),s(" size "),a("span",{class:"token keyword"},"in"),s(` bytes
`),a("span",{class:"token parameter variable"},"-ss"),s(" time_off        "),a("span",{class:"token builtin class-name"},"set"),s(" the start "),a("span",{class:"token function"},"time"),s(` offset
`),a("span",{class:"token parameter variable"},"-sseof"),s(" time_off     "),a("span",{class:"token builtin class-name"},"set"),s(" the start "),a("span",{class:"token function"},"time"),s(` offset relative to EOF
`),a("span",{class:"token parameter variable"},"-seek_timestamp"),s("     enable/disable seeking by timestamp with "),a("span",{class:"token parameter variable"},"-ss"),s(`
`),a("span",{class:"token parameter variable"},"-timestamp"),s(),a("span",{class:"token function"},"time"),s("     "),a("span",{class:"token builtin class-name"},"set"),s(" the recording timestamp "),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'now'"),s(" to "),a("span",{class:"token builtin class-name"},"set"),s(" the current "),a("span",{class:"token function"},"time"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-metadata"),s(),a("span",{class:"token assign-left variable"},"string"),a("span",{class:"token operator"},"="),s("string  "),a("span",{class:"token function"},"add"),s(` metadata
`),a("span",{class:"token parameter variable"},"-program"),s(),a("span",{class:"token assign-left variable"},"title"),a("span",{class:"token operator"},"="),s("string:st"),a("span",{class:"token operator"},"="),s("number"),a("span",{class:"token punctuation"},".."),s(".  "),a("span",{class:"token function"},"add"),s(` program with specified streams
`),a("span",{class:"token parameter variable"},"-target"),s(),a("span",{class:"token builtin class-name"},"type"),s("        specify target "),a("span",{class:"token function"},"file"),s(),a("span",{class:"token builtin class-name"},"type"),s(),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"vcd"'),s(", "),a("span",{class:"token string"},'"svcd"'),s(", "),a("span",{class:"token string"},'"dvd"'),s(", "),a("span",{class:"token string"},'"dv"'),s(" or "),a("span",{class:"token string"},'"dv50"'),s(" with optional prefixes "),a("span",{class:"token string"},'"pal-"'),s(", "),a("span",{class:"token string"},'"ntsc-"'),s(" or "),a("span",{class:"token string"},'"film-"'),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-apad"),s(`               audio pad
`),a("span",{class:"token parameter variable"},"-frames"),s(" number      "),a("span",{class:"token builtin class-name"},"set"),s(` the number of frames to output
`),a("span",{class:"token parameter variable"},"-filter"),s(" filter_graph  "),a("span",{class:"token builtin class-name"},"set"),s(` stream filtergraph
`),a("span",{class:"token parameter variable"},"-filter_script"),s(" filename  "),a("span",{class:"token builtin class-name"},"read"),s(" stream filtergraph description from a "),a("span",{class:"token function"},"file"),s(`
`),a("span",{class:"token parameter variable"},"-reinit_filter"),s(`      reinit filtergraph on input parameter changes
`),a("span",{class:"token parameter variable"},"-discard"),s(`            discard
`),a("span",{class:"token parameter variable"},"-disposition"),s(`        disposition
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),f=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token parameter variable"},"-vframes"),s(" number     "),a("span",{class:"token builtin class-name"},"set"),s(` the number of video frames to output
`),a("span",{class:"token parameter variable"},"-r"),s(" rate             "),a("span",{class:"token builtin class-name"},"set"),s(" frame rate "),a("span",{class:"token punctuation"},"("),s("Hz value, fraction or abbreviation"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-s"),s(" size             "),a("span",{class:"token builtin class-name"},"set"),s(" frame size "),a("span",{class:"token punctuation"},"("),s("WxH or abbreviation"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-aspect"),s(" aspect      "),a("span",{class:"token builtin class-name"},"set"),s(" aspect ratio "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"4"),s(":3, "),a("span",{class:"token number"},"16"),s(":9 or "),a("span",{class:"token number"},"1.3333"),s(", "),a("span",{class:"token number"},"1.7777"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-bits_per_raw_sample"),s(" number  "),a("span",{class:"token builtin class-name"},"set"),s(` the number of bits per raw sample
`),a("span",{class:"token parameter variable"},"-vn"),s(`                 disable video
`),a("span",{class:"token parameter variable"},"-vcodec"),s(" codec       force video codec "),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'copy'"),s(" to copy stream"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-timecode"),s(" hh:mm:ss"),a("span",{class:"token punctuation"},"["),s(":"),a("span",{class:"token punctuation"},";"),s("."),a("span",{class:"token punctuation"},"]"),s("ff  "),a("span",{class:"token builtin class-name"},"set"),s(` initial TimeCode value.
`),a("span",{class:"token parameter variable"},"-pass"),s(" n             "),a("span",{class:"token keyword"},"select"),s(" the pass number "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"1"),s(" to "),a("span",{class:"token number"},"3"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-vf"),s(" filter_graph    "),a("span",{class:"token builtin class-name"},"set"),s(` video filters
`),a("span",{class:"token parameter variable"},"-ab"),s(" bitrate         audio bitrate "),a("span",{class:"token punctuation"},"("),s("please use -b:a"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-b"),s(" bitrate          video bitrate "),a("span",{class:"token punctuation"},"("),s("please use -b:v"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-dn"),s(`                 disable data
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),h=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token parameter variable"},"-aframes"),s(" number     "),a("span",{class:"token builtin class-name"},"set"),s(` the number of audio frames to output
`),a("span",{class:"token parameter variable"},"-aq"),s(" quality         "),a("span",{class:"token builtin class-name"},"set"),s(" audio quality "),a("span",{class:"token punctuation"},"("),s("codec-specific"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-ar"),s(" rate            "),a("span",{class:"token builtin class-name"},"set"),s(" audio sampling rate "),a("span",{class:"token punctuation"},"("),s("in Hz"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-ac"),s(" channels        "),a("span",{class:"token builtin class-name"},"set"),s(` number of audio channels
`),a("span",{class:"token parameter variable"},"-an"),s(`                 disable audio
`),a("span",{class:"token parameter variable"},"-acodec"),s(" codec       force audio codec "),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'copy'"),s(" to copy stream"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-vol"),s(" volume         change audio volume "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"256"),a("span",{class:"token operator"},"="),s("normal"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-af"),s(" filter_graph    "),a("span",{class:"token builtin class-name"},"set"),s(` audio filters
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),g=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token parameter variable"},"-s"),s(" size             "),a("span",{class:"token builtin class-name"},"set"),s(" frame size "),a("span",{class:"token punctuation"},"("),s("WxH or abbreviation"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-sn"),s(`                 disable subtitle
`),a("span",{class:"token parameter variable"},"-scodec"),s(" codec       force subtitle codec "),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'copy'"),s(" to copy stream"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-stag"),s(` fourcc/tag    force subtitle tag/fourcc
`),a("span",{class:"token parameter variable"},"-fix_sub_duration"),s(`   fix subtitles duration
`),a("span",{class:"token parameter variable"},"-canvas_size"),s(" size   "),a("span",{class:"token builtin class-name"},"set"),s(" canvas size "),a("span",{class:"token punctuation"},"("),s("WxH or abbreviation"),a("span",{class:"token punctuation"},")"),s(`
`),a("span",{class:"token parameter variable"},"-spre"),s(" preset        "),a("span",{class:"token builtin class-name"},"set"),s(` the subtitle options to the indicated preset
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),_=o(`<h2 id="usuage" tabindex="-1"><a class="header-anchor" href="#usuage" aria-hidden="true">#</a> Usuage</h2><h3 id="split-media-into-multi-parts" tabindex="-1"><a class="header-anchor" href="#split-media-into-multi-parts" aria-hidden="true">#</a> Split media into multi-parts</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># segment_time </span>
ffmpeg <span class="token parameter variable">-i</span> somefile.mp3 <span class="token parameter variable">-f</span> segment <span class="token parameter variable">-segment_time</span> <span class="token number">3</span> <span class="token parameter variable">-c</span> copy out%03d.mp3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># From time 4.5 seconds to output 1 frame named output.png</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-ss</span> <span class="token number">4.500</span> <span class="token parameter variable">-vframes</span> <span class="token number">1</span> output.png

<span class="token comment"># From time 4.5 seconds to output 10 frame continously named output%d.png (%d if format string for integer)</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-ss</span> <span class="token number">4.500</span> <span class="token parameter variable">-vframes</span> <span class="token number">10</span> output%d.png

<span class="token comment"># set frame per senond is 1, output 1 frame per second.</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">1</span> output%d.png

<span class="token comment"># set frame per senond is 0.1, output 0.1 frame per second, so the result is output 1 frame every 10 seconds.</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">0.1</span> output%d.png

<span class="token comment"># set frame per senond is 10, output 10 frame per second</span>
ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-vf</span> <span class="token assign-left variable">fps</span><span class="token operator">=</span><span class="token number">10</span> output%d.png
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="other-resources" tabindex="-1"><a class="header-anchor" href="#other-resources" aria-hidden="true">#</a> Other Resources</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>然后从视频中提取图片的命令如下：
ffmpeg <span class="token parameter variable">-i</span> <span class="token punctuation">[</span>视频路径<span class="token punctuation">]</span> <span class="token parameter variable">-r</span> <span class="token number">1</span> <span class="token parameter variable">-q:v</span> <span class="token number">2</span> <span class="token parameter variable">-f</span> image2 image-%d.jpeg
 视频路径：如 <span class="token string">&quot;myvideo.mp4&quot;</span><span class="token punctuation">(</span>这时这个视频也在bin文件目录下才可以直接这么写<span class="token punctuation">)</span>，或者完整路径的

  <span class="token parameter variable">-r</span>   ：每秒提取的帧数，如上面为每秒1帧，即一张图像
  <span class="token parameter variable">-q:v</span> ：图片质量
  <span class="token parameter variable">-f</span>   ：图片格式，上述为image2
image-%d.jpeg：生成图像的文件名，可以加上完整路径，%d会使文件名按整数编号，如上述生成图像为image-1.jpeg, image-2.jpeg, <span class="token punctuation">..</span>.

还有其他参数：
  <span class="token parameter variable">-t</span>      ：持续时间，如-t <span class="token number">4</span>表示持续4s
  <span class="token parameter variable">-ss</span>     ：起始时间，如-ss 01:30:14，从01:30:14开始
  -vframes：指定抽取的帧数，如-vframes <span class="token number">120</span>，指定抽取120张
  <span class="token parameter variable">-s</span>      ：格式大小，如-s 640x360
  <span class="token parameter variable">-y</span>      ：覆盖，直接使用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),x=a("br",null,null,-1),y={href:"https://blog.csdn.net/qq_43057180/article/details/105676230",target:"_blank",rel:"noopener noreferrer"},w={href:"https://yt1s.com/en17",target:"_blank",rel:"noopener noreferrer"};function q(z,A){const p=r("CodeTabs"),l=r("ExternalLinkIcon");return u(),m("div",null,[b,i(p,{id:"7",data:[{id:"Global options"},{id:"Per-file main options"},{id:"Video options:"},{id:"Audio options:"},{id:"Subtitle options:"}]},{title0:e(({value:n,isActive:t})=>[s("Global options")]),title1:e(({value:n,isActive:t})=>[s("Per-file main options")]),title2:e(({value:n,isActive:t})=>[s("Video options:")]),title3:e(({value:n,isActive:t})=>[s("Audio options:")]),title4:e(({value:n,isActive:t})=>[s("Subtitle options:")]),tab0:e(({value:n,isActive:t})=>[v]),tab1:e(({value:n,isActive:t})=>[k]),tab2:e(({value:n,isActive:t})=>[f]),tab3:e(({value:n,isActive:t})=>[h]),tab4:e(({value:n,isActive:t})=>[g]),_:1}),_,a("p",null,[s("ffmpeg使用："),x,a("a",y,[s("https://blog.csdn.net/qq_43057180/article/details/105676230"),i(l)])]),a("p",null,[s("youtube downloader online: "),a("a",w,[s("https://yt1s.com/en17"),i(l)])])])}const j=c(d,[["render",q],["__file","q_a.html.vue"]]);export{j as default};
