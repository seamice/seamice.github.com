import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-d09f4be3.js";const p={},e=t(`<h2 id="using-new" tabindex="-1"><a class="header-anchor" href="#using-new" aria-hidden="true">#</a> Using <code>__new__</code></h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> threading

<span class="token keyword">class</span> <span class="token class-name">class_ins</span><span class="token punctuation">:</span>
    _instance_lock <span class="token operator">=</span> thr0eading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;__init__&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">&#39;tile_dbs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;__init__ later&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>tile_dbs <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">#Single Class</span>
    <span class="token keyword">def</span> <span class="token function">__new__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> args<span class="token punctuation">,</span> kwargs<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;_instance&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">with</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span><span class="token punctuation">.</span>_instance_lock<span class="token punctuation">:</span>
                <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;_instance&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token builtin">eval</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span><span class="token punctuation">.</span>_instance <span class="token operator">=</span> <span class="token builtin">object</span><span class="token punctuation">.</span>__new__<span class="token punctuation">(</span>cls<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span><span class="token punctuation">.</span>_instance
    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

a <span class="token operator">=</span> class_ins<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-metaclass" tabindex="-1"><a class="header-anchor" href="#using-metaclass" aria-hidden="true">#</a> Using <code>__metaclass__</code></h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div>`,4),c=[e];function o(i,l){return s(),a("div",null,c)}const d=n(p,[["render",o],["__file","SingleClass.html.vue"]]);export{d as default};
