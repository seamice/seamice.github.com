import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-2cdb47c7.js";const p={},e=t(`<details class="hint-container details"><summary>Single File to Super Resolution for Tiff</summary><p><code>conf.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> environ
<span class="token keyword">import</span> os


<span class="token comment">## load environment file</span>
environ<span class="token punctuation">.</span>Env<span class="token punctuation">.</span>read_env<span class="token punctuation">(</span><span class="token string">&quot;base.env&quot;</span><span class="token punctuation">)</span>

<span class="token comment">## load GDAL DLL path</span>
env <span class="token operator">=</span> environ<span class="token punctuation">.</span>Env<span class="token punctuation">(</span><span class="token punctuation">)</span>
os<span class="token punctuation">.</span>add_dll_directory<span class="token punctuation">(</span>env<span class="token punctuation">(</span><span class="token string">&#39;GDAL_DLL&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">r&#39;D:\\tools\\anaconda3-2023\\Library\\bin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## load environment file</span>
    environ<span class="token punctuation">.</span>Env<span class="token punctuation">.</span>read_env<span class="token punctuation">(</span><span class="token string">&quot;base.env&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">## load GDAL DLL path</span>
    env <span class="token operator">=</span> environ<span class="token punctuation">.</span>Env<span class="token punctuation">(</span><span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>add_dll_directory<span class="token punctuation">(</span>env<span class="token punctuation">(</span><span class="token string">&#39;GDAL_DLL&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">r&#39;D:\\tools\\anaconda3-2023\\Library\\bin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code> enlarge.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> conf <span class="token keyword">import</span> <span class="token operator">*</span>
init<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> osgeo <span class="token keyword">import</span> gdal
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> math
<span class="token keyword">from</span> diffusers <span class="token keyword">import</span> LDMSuperResolutionPipeline
<span class="token keyword">import</span> torch
<span class="token keyword">import</span> threading
<span class="token keyword">from</span> threads <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> copy
<span class="token keyword">import</span> json
<span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Process<span class="token punctuation">,</span> Pipe
<span class="token keyword">from</span> http_pool<span class="token punctuation">.</span>http_pools <span class="token keyword">import</span> Pool
pipeline <span class="token operator">=</span> <span class="token boolean">None</span>

device <span class="token operator">=</span> <span class="token string">&quot;cuda&quot;</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&quot;cpu&quot;</span>
model_id <span class="token operator">=</span> <span class="token string">&quot;CompVis/ldm-super-resolution-4x-openimages&quot;</span>
pipeline <span class="token operator">=</span> LDMSuperResolutionPipeline<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>model_id<span class="token punctuation">)</span>
pipeline <span class="token operator">=</span> pipeline<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">getPipeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#if None is not pipeline:</span>
    <span class="token comment">#    return pipeline</span>
    device <span class="token operator">=</span> <span class="token string">&quot;cuda&quot;</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&quot;cpu&quot;</span>
    model_id <span class="token operator">=</span> <span class="token string">&quot;CompVis/ldm-super-resolution-4x-openimages&quot;</span>
    pipeline <span class="token operator">=</span> LDMSuperResolutionPipeline<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>model_id<span class="token punctuation">)</span>
    pipeline <span class="token operator">=</span> pipeline<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>
    <span class="token keyword">return</span> pipeline

<span class="token keyword">def</span> <span class="token function">superResolution</span><span class="token punctuation">(</span>pipe<span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token punctuation">:</span>
    Image<span class="token punctuation">.</span>frombytes<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    enlarge <span class="token operator">=</span> pipeline<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    pipe<span class="token punctuation">.</span>send<span class="token punctuation">(</span>enlarge<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*****************************************************&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">TiffSuperResoluction</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img_path<span class="token punctuation">,</span> thread_count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__img_path__ <span class="token operator">=</span> img_path
        self<span class="token punctuation">.</span>__x_idx__ <span class="token operator">=</span> <span class="token number">0</span>
        self<span class="token punctuation">.</span>__y_idx__ <span class="token operator">=</span> <span class="token number">0</span>
        self<span class="token punctuation">.</span>__tile_size__ <span class="token operator">=</span> <span class="token number">256</span>
        self<span class="token punctuation">.</span>__init_tif__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__pipeline <span class="token operator">=</span> getPipeline<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__tile_list__ <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__locker__ <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__read_locker__ <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__thread_count__ <span class="token operator">=</span> thread_count
  
    <span class="token keyword">def</span> <span class="token function">__init_tif__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Read Source file</span>
        self<span class="token punctuation">.</span>__ds__ <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">,</span> gdal<span class="token punctuation">.</span>GA_ReadOnly<span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>__ds__ <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Could not open image file </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        trans <span class="token operator">=</span> copy<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetGeoTransform<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        trans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/=</span><span class="token number">4</span>
        trans<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">/=</span><span class="token number">4</span>
        
        <span class="token comment">## Create Output file</span>
        driver <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GetDriverByName<span class="token punctuation">(</span><span class="token string">&quot;GTiff&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_enlarge_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__ret_ds__ <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_enlarge_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> gdal<span class="token punctuation">.</span>GA_Update<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__ret_ds__ <span class="token operator">=</span> driver<span class="token punctuation">.</span>Create<span class="token punctuation">(</span>
                self<span class="token punctuation">.</span>__get_enlarge_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>__get_width__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>__get_height__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>__get_band_count__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                gdal<span class="token punctuation">.</span>GDT_Byte
            <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__ret_ds__<span class="token punctuation">.</span>SetGeoTransform<span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>trans<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__get_json_file__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        path<span class="token punctuation">,</span> _ <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">-enlarge.json&quot;</span></span>
    
    <span class="token keyword">def</span> <span class="token function">__get_log_file__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        path<span class="token punctuation">,</span> _ <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">-enlarge.log&quot;</span></span>
    
    <span class="token keyword">def</span> <span class="token function">__get_enlarge_file__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        path<span class="token punctuation">,</span> ext <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">-enlarge</span><span class="token interpolation"><span class="token punctuation">{</span>ext<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

    <span class="token keyword">def</span> <span class="token function">__get_maxx__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterXSize<span class="token operator">/</span>self<span class="token punctuation">.</span>__tile_size__<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__get_maxy__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterYSize<span class="token operator">/</span>self<span class="token punctuation">.</span>__tile_size__<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__get_width__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
       <span class="token keyword">return</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterXSize
    
    <span class="token keyword">def</span> <span class="token function">__get_height__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
       <span class="token keyword">return</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterYSize
    
    <span class="token keyword">def</span> <span class="token function">__get_band_count__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
       <span class="token keyword">return</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterCount
    
    <span class="token keyword">def</span> <span class="token function">__super_resolution__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token punctuation">:</span>
        ret <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            ret <span class="token operator">=</span> self<span class="token punctuation">.</span>__pipeline<span class="token punctuation">(</span>img<span class="token punctuation">,</span> num_inference_steps<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> eta<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>images<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;error happened&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token keyword">finally</span><span class="token punctuation">:</span>
           <span class="token keyword">return</span> ret
    
    <span class="token keyword">def</span> <span class="token function">write_process</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_log_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fw<span class="token punctuation">:</span>
            fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>x_idx<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>y_idx<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">write_tile_list</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tile_list<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fw<span class="token punctuation">:</span>
            fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>tile_list<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_process</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        x_idx <span class="token operator">=</span> <span class="token number">0</span>
        y_idx <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_log_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_log_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fr<span class="token punctuation">:</span>
                line <span class="token operator">=</span> fr<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
                x_idx<span class="token punctuation">,</span> y_idx <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
                x_idx <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x_idx<span class="token punctuation">)</span>
                y_idx <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>y_idx<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__calc_tile_list__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> x_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__x_idx__<span class="token punctuation">,</span>self<span class="token punctuation">.</span>__get_maxx__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> y_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__y_idx__<span class="token punctuation">,</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_maxy__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> x_idx<span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span> y_idx<span class="token punctuation">,</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>__tile_size__<span class="token punctuation">}</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__tile__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> tile_size<span class="token punctuation">)</span><span class="token punctuation">:</span>
        temp <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_width__<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> x_idx <span class="token operator">*</span> tile_size
        width <span class="token operator">=</span> tile_size <span class="token keyword">if</span> temp <span class="token operator">&gt;=</span> tile_size <span class="token keyword">else</span> temp
        
        temp <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_height__<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> y_idx <span class="token operator">*</span> tile_size
        height <span class="token operator">=</span> tile_size <span class="token keyword">if</span> temp <span class="token operator">&gt;=</span> tile_size <span class="token keyword">else</span> temp
        
        x_offset <span class="token operator">=</span> x_idx <span class="token operator">*</span> tile_size
        y_offset <span class="token operator">=</span> y_idx <span class="token operator">*</span> tile_size
        
        band1 <span class="token operator">=</span> <span class="token boolean">None</span>
        band2 <span class="token operator">=</span> <span class="token boolean">None</span>
        band3 <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">with</span> self<span class="token punctuation">.</span>__read_locker__<span class="token punctuation">:</span>
            band1 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
            band2 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
            band3 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
        
        image <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>np<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">(</span>band1<span class="token punctuation">,</span> band2<span class="token punctuation">,</span> band3<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> image
    

    <span class="token keyword">def</span> <span class="token function">__get_tile__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> x_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__x_idx__<span class="token punctuation">,</span>self<span class="token punctuation">.</span>__get_maxx__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            temp <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_width__<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> x_idx <span class="token operator">*</span> self<span class="token punctuation">.</span>__tile_size__
            width <span class="token operator">=</span> self<span class="token punctuation">.</span>__tile_size__ <span class="token keyword">if</span> temp <span class="token operator">&gt;=</span> self<span class="token punctuation">.</span>__tile_size__ <span class="token keyword">else</span> temp
            <span class="token keyword">for</span> y_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__y_idx__<span class="token punctuation">,</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_maxy__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                temp <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_height__<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> y_idx <span class="token operator">*</span> self<span class="token punctuation">.</span>__tile_size__
                height <span class="token operator">=</span> self<span class="token punctuation">.</span>__tile_size__ <span class="token keyword">if</span> temp <span class="token operator">&gt;=</span> self<span class="token punctuation">.</span>__tile_size__ <span class="token keyword">else</span> temp
                
                x_offset <span class="token operator">=</span> x_idx <span class="token operator">*</span> self<span class="token punctuation">.</span>__tile_size__
                y_offset <span class="token operator">=</span> y_idx <span class="token operator">*</span> self<span class="token punctuation">.</span>__tile_size__
                
                band1 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
                band2 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
                band3 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
                
                image <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>np<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">(</span>band1<span class="token punctuation">,</span> band2<span class="token punctuation">,</span> band3<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">yield</span> x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> image
    
    <span class="token keyword">def</span> <span class="token function">__write__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> enlarge_tile<span class="token punctuation">)</span><span class="token punctuation">:</span>
        array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>enlarge_tile<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__ret_ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WriteArray<span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> x_idx<span class="token operator">*</span>self<span class="token punctuation">.</span>__tile_size__<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> y_idx<span class="token operator">*</span>self<span class="token punctuation">.</span>__tile_size__<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__ds__ <span class="token operator">=</span> <span class="token boolean">None</span>
        self<span class="token punctuation">.</span>__ret_ds__ <span class="token operator">=</span> <span class="token boolean">None</span>

    <span class="token comment">#def run(self, x_idx = 0, y_idx = 0, tile_size = 256):</span>
    <span class="token comment">#    self.__x_idx__ = x_idx</span>
    <span class="token comment">#    self.__y_idx__ = y_idx</span>
    <span class="token comment">#    self.__tile_size__ = tile_size</span>
    <span class="token comment">#    if os.path.exists(self.__get_log_file__()):</span>
    <span class="token comment">#        self.__x_idx__, self.__y_idx__ = self.get_process()</span>
    <span class="token comment">#    for x_idx, y_idx, tile in self.__get_tile__():</span>
    <span class="token comment">#        print(self.__img_path__, x_idx, y_idx, &quot;/&quot;, self.__get_maxx__(), self.__get_maxy__())</span>
    <span class="token comment">#        self.write_process(x_idx, y_idx)</span>
    <span class="token comment">#        enlarge = self.__super_resolution__(tile)</span>
    <span class="token comment">#        if enlarge:</span>
    <span class="token comment">#            self.__write__(x_idx, y_idx, enlarge)</span>
    <span class="token comment">#    if os.path.exists(self.__get_log_file__()):</span>
    <span class="token comment">#        os.rmdir(self.__get_log_file__())</span>

    <span class="token keyword">def</span> <span class="token function">write_json</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fw<span class="token punctuation">:</span>
            fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">read_json</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fr<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__tile_list__  <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>fr<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


    <span class="token keyword">def</span> <span class="token function">process_tile</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tile_info<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;processing&#39;</span><span class="token punctuation">)</span>
        x_idx <span class="token operator">=</span> tile_info<span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">]</span>
        y_idx <span class="token operator">=</span> tile_info<span class="token punctuation">[</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span>
        tile_size <span class="token operator">=</span> tile_info<span class="token punctuation">[</span><span class="token string">&#39;t&#39;</span><span class="token punctuation">]</span>

        
        parent_conn<span class="token punctuation">,</span> child_conn <span class="token operator">=</span> Pipe<span class="token punctuation">(</span><span class="token punctuation">)</span>
        p1 <span class="token operator">=</span> Process<span class="token punctuation">(</span>target<span class="token operator">=</span>superResolution<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>parent_conn<span class="token punctuation">,</span> self<span class="token punctuation">.</span>__tile__<span class="token punctuation">(</span>x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> tile_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        p1<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
        ret <span class="token operator">=</span> child_conn<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;test/</span><span class="token interpolation"><span class="token punctuation">{</span>x_idx<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>y_idx<span class="token punctuation">}</span></span><span class="token string">.jpg&#39;</span></span><span class="token punctuation">,</span> wb<span class="token punctuation">)</span> <span class="token keyword">as</span> fw<span class="token punctuation">:</span>
            fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>ret<span class="token punctuation">)</span>

        <span class="token comment">#try:</span>
        <span class="token comment">#    enlarge = self.__super_resolution__(self.__tile__(x_idx, y_idx, tile_size))</span>
        <span class="token comment">#    with self.__locker__:</span>
        <span class="token comment">#        if enlarge:</span>
        <span class="token comment">#            self.__write__(x_idx, y_idx, enlarge)</span>
        <span class="token comment">#            self.write_json()</span>
        <span class="token comment">#        else:</span>
        <span class="token comment">#            self.__tile_list__.append(tile_info)</span>
        <span class="token comment">#except Exception as e:</span>
        <span class="token comment">#    print(e)</span>
        <span class="token comment">#    print(&#39;processing exception&#39;)</span>
        <span class="token comment">#    self.__tile_list__.append(tile_info)</span>


    
    <span class="token keyword">def</span> <span class="token function">thread_run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tile_size <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__tile_size__ <span class="token operator">=</span> tile_size

        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__calc_tile_list__<span class="token punctuation">(</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>write_json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        
        thread_obj <span class="token operator">=</span> thread_util<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__thread_count__<span class="token punctuation">)</span>

        <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            i <span class="token operator">=</span> self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>__get_maxx__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>__get_maxy__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            thread_obj<span class="token punctuation">.</span>process<span class="token punctuation">(</span>self<span class="token punctuation">.</span>process_tile<span class="token punctuation">,</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
        thread_obj<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tile_size <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__tile_size__ <span class="token operator">=</span> tile_size

        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__calc_tile_list__<span class="token punctuation">(</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>write_json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            i <span class="token operator">=</span> self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>process_tile<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token comment">#base_path = r&#39;D:\\BaiduNetdiskDownload\\SuperResolution&#39;</span>
base_path <span class="token operator">=</span> <span class="token string">r&#39;E:\\BaiduNetdiskDownload\\FirstBatch&#39;</span>
tif_list <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span>
    <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_path<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">,</span> 
    <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;.tif&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>base_path<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token comment">#for tif in tif_list:</span>
<span class="token comment">#    if tif.lower().endswith(&#39;-enlarge.tif&#39;):</span>
<span class="token comment">#        continue</span>
<span class="token comment">#    try:</span>
<span class="token comment">#        TiffSuperResoluction(tif).run()</span>
<span class="token comment">#        #TiffSuperResoluction(tif).run(tile_size=512)</span>
<span class="token comment">#    except Exception as e:</span>
<span class="token comment">#        print(&quot;Exception&quot;)</span>
<span class="token comment">#    else:</span>
<span class="token comment">#        pass</span>


<span class="token keyword">for</span> tif <span class="token keyword">in</span> tif_list<span class="token punctuation">:</span>
    <span class="token keyword">if</span> tif<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;-enlarge.tif&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">continue</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        TiffSuperResoluction<span class="token punctuation">(</span>tif<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>thread_run<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">#TiffSuperResoluction(tif).run()</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Exception&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="client-server" tabindex="-1"><a class="header-anchor" href="#client-server" aria-hidden="true">#</a> Client &amp; Server</h2><details class="hint-container details"><summary>Server</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> web
<span class="token keyword">import</span> sys
sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> torch
<span class="token keyword">from</span> diffusers <span class="token keyword">import</span> LDMSuperResolutionPipeline
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> io

pipeline <span class="token operator">=</span> <span class="token boolean">None</span>

device <span class="token operator">=</span> <span class="token string">&quot;cuda&quot;</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&quot;cpu&quot;</span>
model_id <span class="token operator">=</span> <span class="token string">&quot;CompVis/ldm-super-resolution-4x-openimages&quot;</span>
pipeline <span class="token operator">=</span> LDMSuperResolutionPipeline<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span>model_id<span class="token punctuation">)</span>
pipeline <span class="token operator">=</span> pipeline<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>

urls <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token string">&#39;/enlarge&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SuperResolution&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
app <span class="token operator">=</span> web<span class="token punctuation">.</span>application<span class="token punctuation">(</span>urls<span class="token punctuation">,</span> <span class="token builtin">globals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">SuperResolution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">POST</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> web<span class="token punctuation">.</span>data<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> data<span class="token punctuation">:</span>
            stream <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
            img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span>
            
            ret_img <span class="token operator">=</span> pipeline<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;images&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

            <span class="token comment"># Create a BytesIO object</span>
            <span class="token builtin">buffer</span> <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>ret_img<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">(</span>ret_img<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment"># Save the image to the BytesIO object in a specific format (e.g., JPEG)</span>
            ret_img<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token builtin">buffer</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;PNG&#39;</span><span class="token punctuation">)</span>

            <span class="token comment"># Get the bytes from the BytesIO object</span>
            <span class="token keyword">return</span>  <span class="token builtin">buffer</span><span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    web<span class="token punctuation">.</span>internalerror <span class="token operator">=</span> web<span class="token punctuation">.</span>debugerror
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Client</summary><p><code>http_pool.http_pools.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> subprocess
<span class="token keyword">import</span> requests <span class="token keyword">as</span> req
<span class="token keyword">import</span> threading
<span class="token keyword">import</span> psutil
<span class="token keyword">import</span> time
<span class="token keyword">import</span> io
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image

<span class="token keyword">class</span> <span class="token class-name">Pool</span><span class="token punctuation">:</span>
    _instance_lock <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> ports<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">&#39;__is_instance__&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        self<span class="token punctuation">.</span>__is_init_server__ <span class="token operator">=</span> <span class="token boolean">False</span>
        self<span class="token punctuation">.</span>__process_list__ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>__locker__ <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>commands <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>__ports__ <span class="token operator">=</span> ports
        <span class="token comment">#for p in ports:</span>
        <span class="token comment">#    self.commands.append([&#39;python&#39;, &#39;http_pool/http_worker.py&#39;, f&#39;{p}&#39;])</span>
        self<span class="token punctuation">.</span>base_url <span class="token operator">=</span> <span class="token string">&quot;http://127.0.0.1&quot;</span>
        self<span class="token punctuation">.</span>uri <span class="token operator">=</span> <span class="token string">&quot;/enlarge&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init_server__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>__is_init_server__<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__is_init_server__ <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">for</span> command <span class="token keyword">in</span> self<span class="token punctuation">.</span>commands<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>__process_list__<span class="token punctuation">.</span>append<span class="token punctuation">(</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span>command<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__get_url__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>base_url<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>port<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>uri<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
    
    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> self<span class="token punctuation">.</span>__process_list__<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token boolean">None</span> <span class="token keyword">is</span> i<span class="token punctuation">.</span>poll<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                parent <span class="token operator">=</span> psutil<span class="token punctuation">.</span>Process<span class="token punctuation">(</span>i<span class="token punctuation">.</span>pid<span class="token punctuation">)</span> 
                <span class="token keyword">for</span> child <span class="token keyword">in</span> parent<span class="token punctuation">.</span>children<span class="token punctuation">(</span>recursive<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    child<span class="token punctuation">.</span>terminate<span class="token punctuation">(</span><span class="token punctuation">)</span>
                i<span class="token punctuation">.</span>terminate<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">#def __new__(cls, *args, **kwargs):</span>
    <span class="token comment">#    if not hasattr(Pool, &quot;_instance&quot;):</span>
    <span class="token comment">#        with Pool._instance_lock:</span>
    <span class="token comment">#            if not hasattr(Pool, &quot;_instance&quot;):</span>
    <span class="token comment">#                Pool._instance = object.__new__(cls)</span>
    <span class="token comment">#    return Pool._instance</span>
    
    <span class="token keyword">def</span> <span class="token function">__get_process__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> self<span class="token punctuation">.</span>__locker__<span class="token punctuation">:</span>
            <span class="token comment">#return self.__process_list__.pop()</span>
            <span class="token keyword">return</span> self<span class="token punctuation">.</span>__ports__<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__revoke_process__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> self<span class="token punctuation">.</span>__locker__<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__ports__<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>
            <span class="token comment">#self.__process_list__.append(item)</span>

    <span class="token keyword">def</span> <span class="token function">super_resolution</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">#self.__init_server__()</span>
        <span class="token comment">#process = self.__get_process__()</span>
        port <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_process__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        resp <span class="token operator">=</span> <span class="token boolean">None</span>
        ret <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            
            <span class="token comment"># Create a BytesIO object</span>
            <span class="token builtin">buffer</span> <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment"># Save the image to the BytesIO object in a specific format (e.g., JPEG)</span>
            img<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token builtin">buffer</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;PNG&#39;</span><span class="token punctuation">)</span>
            <span class="token comment">#resp = req.post(self.__get_url__(process.args[-1]), img, timeout=600)</span>
            resp <span class="token operator">=</span> req<span class="token punctuation">.</span>post<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_url__<span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">buffer</span><span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
            <span class="token builtin">buffer</span> <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>resp<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
            <span class="token comment"># Open the image using PIL.Image</span>
            ret <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">buffer</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token keyword">finally</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__revoke_process__<span class="token punctuation">(</span>port<span class="token punctuation">)</span>
        <span class="token keyword">if</span> ret<span class="token punctuation">:</span>
            <span class="token keyword">return</span> ret
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>enlarge.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> conf <span class="token keyword">import</span> <span class="token operator">*</span>
init<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> osgeo <span class="token keyword">import</span> gdal
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> math
<span class="token keyword">import</span> torch
<span class="token keyword">import</span> threading
<span class="token keyword">from</span> threads <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> copy
<span class="token keyword">import</span> json
<span class="token keyword">import</span> time
<span class="token keyword">from</span> http_pool<span class="token punctuation">.</span>http_pools <span class="token keyword">import</span> Pool

<span class="token keyword">class</span> <span class="token class-name">TiffSuperResoluction</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img_path<span class="token punctuation">,</span> ports<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__init_tif__<span class="token punctuation">(</span>img_path<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__pipeline <span class="token operator">=</span> <span class="token boolean">None</span> <span class="token comment"># getPipeline()</span>
        self<span class="token punctuation">.</span>__thread_count__ <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ports<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>ports<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__pool__ <span class="token operator">=</span> Pool<span class="token punctuation">(</span>copy<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>ports<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">#pool = Pool(4)</span>
        <span class="token comment">#pool.</span>
  
    <span class="token keyword">def</span> <span class="token function">__init_tif__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__img_path__ <span class="token operator">=</span> img_path
        self<span class="token punctuation">.</span>__x_idx__ <span class="token operator">=</span> <span class="token number">0</span>
        self<span class="token punctuation">.</span>__y_idx__ <span class="token operator">=</span> <span class="token number">0</span>
        self<span class="token punctuation">.</span>__tile_size__ <span class="token operator">=</span> <span class="token number">256</span>
        self<span class="token punctuation">.</span>__tile_list__ <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__write_locker__ <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__read_locker__ <span class="token operator">=</span> threading<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># Read Source file</span>
        self<span class="token punctuation">.</span>__ds__ <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">,</span> gdal<span class="token punctuation">.</span>GA_ReadOnly<span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>__ds__ <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Could not open image file </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        
        trans <span class="token operator">=</span> copy<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetGeoTransform<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        trans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/=</span><span class="token number">4</span>
        trans<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">/=</span><span class="token number">4</span>
        
        <span class="token comment">## Create Output file</span>
        driver <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GetDriverByName<span class="token punctuation">(</span><span class="token string">&quot;GTiff&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_enlarge_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__ret_ds__ <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_enlarge_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> gdal<span class="token punctuation">.</span>GA_Update<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__ret_ds__ <span class="token operator">=</span> driver<span class="token punctuation">.</span>Create<span class="token punctuation">(</span>
                self<span class="token punctuation">.</span>__get_enlarge_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>__get_width__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>__get_height__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>__get_band_count__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                gdal<span class="token punctuation">.</span>GDT_Byte
            <span class="token punctuation">)</span>

        <span class="token keyword">if</span> self<span class="token punctuation">.</span>__ret_ds__<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__ret_ds__<span class="token punctuation">.</span>SetGeoTransform<span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">(</span>trans<span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>__ret_ds__<span class="token punctuation">.</span>SetProjection<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetProjection<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__get_json_file__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        path<span class="token punctuation">,</span> _ <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">-enlarge.json&quot;</span></span>
    
    <span class="token keyword">def</span> <span class="token function">__get_log_file__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        path<span class="token punctuation">,</span> _ <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">-enlarge.log&quot;</span></span>
    
    <span class="token keyword">def</span> <span class="token function">__get_enlarge_file__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        path<span class="token punctuation">,</span> ext <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">-enlarge</span><span class="token interpolation"><span class="token punctuation">{</span>ext<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

    <span class="token keyword">def</span> <span class="token function">__get_maxx__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterXSize<span class="token operator">/</span>self<span class="token punctuation">.</span>__tile_size__<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__get_maxy__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterYSize<span class="token operator">/</span>self<span class="token punctuation">.</span>__tile_size__<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__get_width__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
       <span class="token keyword">return</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterXSize
    
    <span class="token keyword">def</span> <span class="token function">__get_height__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
       <span class="token keyword">return</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterYSize
    
    <span class="token keyword">def</span> <span class="token function">__get_band_count__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
       <span class="token keyword">return</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>RasterCount
    
    <span class="token keyword">def</span> <span class="token function">__super_resolution__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>__pool__<span class="token punctuation">.</span>super_resolution<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token comment">#ret = None</span>
        <span class="token comment">#print(&#39;-----------------&#39;)</span>
        <span class="token comment">#try:</span>
        <span class="token comment">#    ret = self.__pipeline(img, num_inference_steps=100, eta=1).images[0]</span>
        <span class="token comment">#except Exception as e:</span>
        <span class="token comment">#    print(&#39;super resolution error happened&#39;)</span>
        <span class="token comment">#    print(e)</span>
        <span class="token comment">#finally:</span>
        <span class="token comment">#   return ret</span>
    
    <span class="token keyword">def</span> <span class="token function">write_process</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_log_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fw<span class="token punctuation">:</span>
            fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>x_idx<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>y_idx<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">write_tile_list</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tile_list<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fw<span class="token punctuation">:</span>
            fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>tile_list<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_process</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        x_idx <span class="token operator">=</span> <span class="token number">0</span>
        y_idx <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_log_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_log_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fr<span class="token punctuation">:</span>
                line <span class="token operator">=</span> fr<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
                x_idx<span class="token punctuation">,</span> y_idx <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
                x_idx <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x_idx<span class="token punctuation">)</span>
                y_idx <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>y_idx<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__calc_tile_list__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> x_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__x_idx__<span class="token punctuation">,</span>self<span class="token punctuation">.</span>__get_maxx__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> y_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__y_idx__<span class="token punctuation">,</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_maxy__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> x_idx<span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span> y_idx<span class="token punctuation">,</span> <span class="token string">&quot;t&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>__tile_size__<span class="token punctuation">}</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">__tile__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> tile_size<span class="token punctuation">)</span><span class="token punctuation">:</span>
        temp <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_width__<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> x_idx <span class="token operator">*</span> tile_size
        width <span class="token operator">=</span> tile_size <span class="token keyword">if</span> temp <span class="token operator">&gt;=</span> tile_size <span class="token keyword">else</span> temp
        
        temp <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_height__<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> y_idx <span class="token operator">*</span> tile_size
        height <span class="token operator">=</span> tile_size <span class="token keyword">if</span> temp <span class="token operator">&gt;=</span> tile_size <span class="token keyword">else</span> temp
        
        x_offset <span class="token operator">=</span> x_idx <span class="token operator">*</span> tile_size
        y_offset <span class="token operator">=</span> y_idx <span class="token operator">*</span> tile_size
        
        band1 <span class="token operator">=</span> <span class="token boolean">None</span>
        band2 <span class="token operator">=</span> <span class="token boolean">None</span>
        band3 <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">with</span> self<span class="token punctuation">.</span>__read_locker__<span class="token punctuation">:</span>
            band1 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
            band2 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
            band3 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
        
        image <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>np<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">(</span>band1<span class="token punctuation">,</span> band2<span class="token punctuation">,</span> band3<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> image
    

    <span class="token keyword">def</span> <span class="token function">__get_tile__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> x_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__x_idx__<span class="token punctuation">,</span>self<span class="token punctuation">.</span>__get_maxx__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            temp <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_width__<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> x_idx <span class="token operator">*</span> self<span class="token punctuation">.</span>__tile_size__
            width <span class="token operator">=</span> self<span class="token punctuation">.</span>__tile_size__ <span class="token keyword">if</span> temp <span class="token operator">&gt;=</span> self<span class="token punctuation">.</span>__tile_size__ <span class="token keyword">else</span> temp
            <span class="token keyword">for</span> y_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__y_idx__<span class="token punctuation">,</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_maxy__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                temp <span class="token operator">=</span> self<span class="token punctuation">.</span>__get_height__<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> y_idx <span class="token operator">*</span> self<span class="token punctuation">.</span>__tile_size__
                height <span class="token operator">=</span> self<span class="token punctuation">.</span>__tile_size__ <span class="token keyword">if</span> temp <span class="token operator">&gt;=</span> self<span class="token punctuation">.</span>__tile_size__ <span class="token keyword">else</span> temp
                
                x_offset <span class="token operator">=</span> x_idx <span class="token operator">*</span> self<span class="token punctuation">.</span>__tile_size__
                y_offset <span class="token operator">=</span> y_idx <span class="token operator">*</span> self<span class="token punctuation">.</span>__tile_size__
                
                band1 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
                band2 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
                band3 <span class="token operator">=</span> self<span class="token punctuation">.</span>__ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>x_offset<span class="token punctuation">,</span> y_offset<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
                
                image <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>np<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">(</span>band1<span class="token punctuation">,</span> band2<span class="token punctuation">,</span> band3<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">yield</span> x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> image
    
    <span class="token keyword">def</span> <span class="token function">__write__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> enlarge_tile<span class="token punctuation">)</span><span class="token punctuation">:</span>
        array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>enlarge_tile<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__ret_ds__<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WriteArray<span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> x_idx<span class="token operator">*</span>self<span class="token punctuation">.</span>__tile_size__<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> y_idx<span class="token operator">*</span>self<span class="token punctuation">.</span>__tile_size__<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__ds__ <span class="token operator">=</span> <span class="token boolean">None</span>
        self<span class="token punctuation">.</span>__ret_ds__ <span class="token operator">=</span> <span class="token boolean">None</span>

    <span class="token keyword">def</span> <span class="token function">write_json</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fw<span class="token punctuation">:</span>
            fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">read_json</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fr<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__tile_list__  <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>fr<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">process_tile</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tile_info<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;processing&#39;</span><span class="token punctuation">)</span>
        x_idx <span class="token operator">=</span> tile_info<span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">]</span>
        y_idx <span class="token operator">=</span> tile_info<span class="token punctuation">[</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span>
        tile_size <span class="token operator">=</span> tile_info<span class="token punctuation">[</span><span class="token string">&#39;t&#39;</span><span class="token punctuation">]</span>
        
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            enlarge <span class="token operator">=</span> self<span class="token punctuation">.</span>__super_resolution__<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__tile__<span class="token punctuation">(</span>x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> tile_size<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">with</span> self<span class="token punctuation">.</span>__write_locker__<span class="token punctuation">:</span>
                <span class="token keyword">if</span> enlarge<span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>__write__<span class="token punctuation">(</span>x_idx<span class="token punctuation">,</span> y_idx<span class="token punctuation">,</span> enlarge<span class="token punctuation">)</span>
                    self<span class="token punctuation">.</span>write_json<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tile_info<span class="token punctuation">)</span>
        <span class="token comment">#except Exception as e:</span>
        <span class="token comment">#    print(e)</span>
        <span class="token comment">#    print(&#39;processing exception###########&#39;)</span>
        <span class="token comment">#    self.__tile_list__.append(tile_info)</span>
        <span class="token keyword">finally</span><span class="token punctuation">:</span>
            <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">thread_run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tile_size <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__tile_size__ <span class="token operator">=</span> tile_size

        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__calc_tile_list__<span class="token punctuation">(</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>write_json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token punctuation">)</span>

        thread_obj <span class="token operator">=</span> thread_util<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__thread_count__<span class="token punctuation">)</span>
        <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            i <span class="token operator">=</span> self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__img_path__<span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>__get_maxx__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>__get_maxy__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            thread_obj<span class="token punctuation">.</span>process<span class="token punctuation">(</span>self<span class="token punctuation">.</span>process_tile<span class="token punctuation">,</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
        thread_obj<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tile_size <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>__tile_size__ <span class="token operator">=</span> tile_size

        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__get_json_file__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>__calc_tile_list__<span class="token punctuation">(</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>write_json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            i <span class="token operator">=</span> self<span class="token punctuation">.</span>__tile_list__<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>process_tile<span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token comment">#base_path = r&#39;D:\\BaiduNetdiskDownload\\SuperResolution&#39;</span>
<span class="token comment">#base_path = r&#39;E:\\BaiduNetdiskDownload\\FirstBatch&#39;</span>
base_path <span class="token operator">=</span> <span class="token string">r&#39;E:\\BaiduNetdiskDownload\\test&#39;</span>
<span class="token comment">#base_path = r&#39;D:\\BaiduNetdiskDownload\\MultiTest&#39;</span>
tif_list <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span>
    <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_path<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">,</span> 
    <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;.tif&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>base_path<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token keyword">for</span> tif <span class="token keyword">in</span> tif_list<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>tif<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> tif<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;-enlarge.tif&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>tif<span class="token punctuation">)</span>
        <span class="token comment">#TiffSuperResoluction(tif, [9000, 9002, 9003, 9004, 9005]).thread_run()</span>
        TiffSuperResoluction<span class="token punctuation">(</span>tif<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9000</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>thread_run<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>conf.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> environ
<span class="token keyword">import</span> os


<span class="token comment">## load environment file</span>
environ<span class="token punctuation">.</span>Env<span class="token punctuation">.</span>read_env<span class="token punctuation">(</span><span class="token string">&quot;base.env&quot;</span><span class="token punctuation">)</span>

<span class="token comment">## load GDAL DLL path</span>
env <span class="token operator">=</span> environ<span class="token punctuation">.</span>Env<span class="token punctuation">(</span><span class="token punctuation">)</span>
os<span class="token punctuation">.</span>add_dll_directory<span class="token punctuation">(</span>env<span class="token punctuation">(</span><span class="token string">&#39;GDAL_DLL&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">r&#39;D:\\tools\\anaconda3-2023\\Library\\bin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## load environment file</span>
    environ<span class="token punctuation">.</span>Env<span class="token punctuation">.</span>read_env<span class="token punctuation">(</span><span class="token string">&quot;base.env&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">## load GDAL DLL path</span>
    env <span class="token operator">=</span> environ<span class="token punctuation">.</span>Env<span class="token punctuation">(</span><span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>add_dll_directory<span class="token punctuation">(</span>env<span class="token punctuation">(</span><span class="token string">&#39;GDAL_DLL&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">r&#39;D:\\tools\\anaconda3-2023\\Library\\bin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,4),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","enlarge.html.vue"]]);export{r as default};
