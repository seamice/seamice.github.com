const n=JSON.parse(`{"key":"v-f1d65eca","path":"/techniques/coding/front-end/axios/04.Interceptor.html","title":"04. Interceptor","lang":"en-US","frontmatter":{"title":"04. Interceptor","date":"2023-11-13T00:00:00.000Z","icon":"/assets/icon/common/axios.svg","author":"Haiyue","category":["VUE"],"tag":["skills"],"star":false,"sticky":false,"description":"Classification 拦截器一共四类 请求成功拦截 请求失败拦截 响应成功拦截 响应失败拦截 Example instance.interceptors.request.use( config =&gt; { //请求拦截的作用 //1. 修改config中的一些配置信息 //2. 发送请求时在界面中显示图标 //3. 某些网络请求（如登录），需添加特殊信息 return config }, err =&gt; { } ) instance.interceptors.response.use( res=&gt; { return res.data; }, err =&gt; { } )","head":[["meta",{"property":"og:url","content":"https://seamice.github.io/blog/techniques/coding/front-end/axios/04.Interceptor.html"}],["meta",{"property":"og:site_name","content":"Haiyue's Blog"}],["meta",{"property":"og:title","content":"04. Interceptor"}],["meta",{"property":"og:description","content":"Classification 拦截器一共四类 请求成功拦截 请求失败拦截 响应成功拦截 响应失败拦截 Example instance.interceptors.request.use( config =&gt; { //请求拦截的作用 //1. 修改config中的一些配置信息 //2. 发送请求时在界面中显示图标 //3. 某些网络请求（如登录），需添加特殊信息 return config }, err =&gt; { } ) instance.interceptors.response.use( res=&gt; { return res.data; }, err =&gt; { } )"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-15T00:29:48.000Z"}],["meta",{"property":"article:author","content":"Haiyue"}],["meta",{"property":"article:tag","content":"skills"}],["meta",{"property":"article:published_time","content":"2023-11-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-15T00:29:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04. Interceptor\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-15T00:29:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Haiyue\\"}]}"]]},"headers":[{"level":2,"title":"Classification","slug":"classification","link":"#classification","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"git":{"createdTime":1700008188000,"updatedTime":1700008188000,"contributors":[{"name":"Haiyue","email":"nutterair1989@gmail.com","commits":1}]},"readingTime":{"minutes":0.39,"words":118},"filePathRelative":"techniques/coding/front-end/axios/04.Interceptor.md","localizedDate":"November 13, 2023","excerpt":"<h2> Classification</h2>\\n<p>拦截器一共四类</p>\\n<ol>\\n<li>请求成功拦截</li>\\n<li>请求失败拦截</li>\\n<li>响应成功拦截</li>\\n<li>响应失败拦截</li>\\n</ol>\\n<h2> Example</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>instance<span class=\\"token punctuation\\">.</span>interceptors<span class=\\"token punctuation\\">.</span>request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token parameter\\">config</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//请求拦截的作用</span>\\n    <span class=\\"token comment\\">//1. 修改config中的一些配置信息</span>\\n    <span class=\\"token comment\\">//2. 发送请求时在界面中显示图标</span>\\n    <span class=\\"token comment\\">//3. 某些网络请求（如登录），需添加特殊信息</span>\\n    <span class=\\"token keyword\\">return</span> config\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token parameter\\">err</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    \\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">)</span>\\ninstance<span class=\\"token punctuation\\">.</span>interceptors<span class=\\"token punctuation\\">.</span>response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token parameter\\">res</span><span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> res<span class=\\"token punctuation\\">.</span>data<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token parameter\\">err</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
