import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c as p,b as n,d as s,e,f as t}from"./app-1b1e072e.js";const c={},r={href:"https://realpython.com/python-logging/",target:"_blank",rel:"noopener noreferrer"},u=t(`<h2 id="log-levels" tabindex="-1"><a class="header-anchor" href="#log-levels" aria-hidden="true">#</a> Log Levels</h2><ul><li><strong>DEBUG</strong></li><li><strong>INFO</strong></li><li><strong>WARNING</strong></li><li><strong>ERROR</strong></li><li><strong>CRITICAL</strong></li></ul><p>The default severity level is <code>WARNING</code> or above.</p><h2 id="sample-code" tabindex="-1"><a class="header-anchor" href="#sample-code" aria-hidden="true">#</a> Sample code</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging

logging<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;This is a debug message&#39;</span><span class="token punctuation">)</span>
logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;This is an info message&#39;</span><span class="token punctuation">)</span>
logging<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">&#39;This is a warning message&#39;</span><span class="token punctuation">)</span>
logging<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">&#39;This is an error message&#39;</span><span class="token punctuation">)</span>
logging<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">&#39;This is a critical message&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="basic-configurations" tabindex="-1"><a class="header-anchor" href="#basic-configurations" aria-hidden="true">#</a> Basic Configurations</h2>`,6),d={href:"https://docs.python.org/3/library/logging.html#logging.basicConfig",target:"_blank",rel:"noopener noreferrer"},g=n("br",null,null,-1),k=t(`<ul><li><code>level</code>: The root logger will be set to the specified severity level.</li><li><code>filename</code>: This specifies the file.</li><li><code>filemode</code>: If filename is given, the file is opened in this mode. The default is <code>a</code>, which means append.</li><li><code>format</code>: This is the format of the log message.</li></ul><h3 id="config-level" tabindex="-1"><a class="header-anchor" href="#config-level" aria-hidden="true">#</a> Config Level</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging

logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>level<span class="token operator">=</span>logging<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span>
logging<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;This will get logged&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="other-configurations" tabindex="-1"><a class="header-anchor" href="#other-configurations" aria-hidden="true">#</a> Other configurations</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging

logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&#39;app.log&#39;</span><span class="token punctuation">,</span> filemode<span class="token operator">=</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;%(name)s - %(levelname)s - %(message)s&#39;</span><span class="token punctuation">)</span>
logging<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">&#39;This will get logged to a file&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="logging-variable-data" tabindex="-1"><a class="header-anchor" href="#logging-variable-data" aria-hidden="true">#</a> Logging Variable Data</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging

name <span class="token operator">=</span> <span class="token string">&#39;John&#39;</span>
logging<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">&#39;%s raised an error&#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="capturing-stack-traces" tabindex="-1"><a class="header-anchor" href="#capturing-stack-traces" aria-hidden="true">#</a> Capturing Stack Traces</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging

a <span class="token operator">=</span> <span class="token number">5</span>
b <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
  c <span class="token operator">=</span> a <span class="token operator">/</span> b
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
  logging<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">&quot;Exception occurred&quot;</span><span class="token punctuation">,</span> exc_info<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="classes-and-functions" tabindex="-1"><a class="header-anchor" href="#classes-and-functions" aria-hidden="true">#</a> Classes and Functions</h2><p>The default logger named <code>root</code>, which is used by the logging module whenever its functions are called directly like this: <code>logging.debug()</code>. You can (and should) define your own logger by creating an object of the Logger class, especially if your application has multiple modules. Letâ€™s have a look at some of the classes and functions in the module.</p><p>The most commonly used classes defined in the logging module are the following:</p><ul><li><strong>Logger</strong>: This is the <code>class</code> whose objects will be used in the application code directly to call the functions.</li><li><strong>LogRecord</strong>: Loggers automatically create <code>LogRecord</code> objects that have all the information related to the event being logged, like the name of the <code>logger</code>, the function, the line number, the message, and more.</li><li><strong>Handler</strong>: Handlers send the <code>LogRecord</code> to the required output destination, like the console or a file. Handler is a base for subclasses like <code>StreamHandler</code>, <code>FileHandler</code>, <code>SMTPHandler</code>, <code>HTTPHandler</code>, and more. These subclasses send the logging outputs to corresponding destinations, like <code>sys.stdout</code> or a disk file.</li><li><strong>Formatter</strong>: This is where you specify the format of the output by specifying a string format that lists out the attributes that the output should contain.</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># logging_example.py</span>

<span class="token keyword">import</span> logging

<span class="token comment"># Create a custom logger</span>
logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>

<span class="token comment"># Create handlers</span>
c_handler <span class="token operator">=</span> logging<span class="token punctuation">.</span>StreamHandler<span class="token punctuation">(</span><span class="token punctuation">)</span>
f_handler <span class="token operator">=</span> logging<span class="token punctuation">.</span>FileHandler<span class="token punctuation">(</span><span class="token string">&#39;file.log&#39;</span><span class="token punctuation">)</span>
c_handler<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>WARNING<span class="token punctuation">)</span>
f_handler<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>ERROR<span class="token punctuation">)</span>

<span class="token comment"># Create formatters and add it to handlers</span>
c_format <span class="token operator">=</span> logging<span class="token punctuation">.</span>Formatter<span class="token punctuation">(</span><span class="token string">&#39;%(name)s - %(levelname)s - %(message)s&#39;</span><span class="token punctuation">)</span>
f_format <span class="token operator">=</span> logging<span class="token punctuation">.</span>Formatter<span class="token punctuation">(</span><span class="token string">&#39;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#39;</span><span class="token punctuation">)</span>
c_handler<span class="token punctuation">.</span>setFormatter<span class="token punctuation">(</span>c_format<span class="token punctuation">)</span>
f_handler<span class="token punctuation">.</span>setFormatter<span class="token punctuation">(</span>f_format<span class="token punctuation">)</span>

<span class="token comment"># Add handlers to the logger</span>
logger<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>c_handler<span class="token punctuation">)</span>
logger<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>f_handler<span class="token punctuation">)</span>

logger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">&#39;This is a warning&#39;</span><span class="token punctuation">)</span>
logger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">&#39;This is an error&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="other-configuration-methods" tabindex="-1"><a class="header-anchor" href="#other-configuration-methods" aria-hidden="true">#</a> Other Configuration Methods</h2><h3 id="ini-config-file" tabindex="-1"><a class="header-anchor" href="#ini-config-file" aria-hidden="true">#</a> Ini Config File</h3><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">loggers</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">keys</span><span class="token punctuation">=</span><span class="token value attr-value">root,sampleLogger</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">handlers</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">keys</span><span class="token punctuation">=</span><span class="token value attr-value">consoleHandler</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">formatters</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">keys</span><span class="token punctuation">=</span><span class="token value attr-value">sampleFormatter</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">logger_root</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">level</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG</span>
<span class="token key attr-name">handlers</span><span class="token punctuation">=</span><span class="token value attr-value">consoleHandler</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">logger_sampleLogger</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">level</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG</span>
<span class="token key attr-name">handlers</span><span class="token punctuation">=</span><span class="token value attr-value">consoleHandler</span>
<span class="token key attr-name">qualname</span><span class="token punctuation">=</span><span class="token value attr-value">sampleLogger</span>
<span class="token key attr-name">propagate</span><span class="token punctuation">=</span><span class="token value attr-value">0</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">handler_consoleHandler</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">class</span><span class="token punctuation">=</span><span class="token value attr-value">StreamHandler</span>
<span class="token key attr-name">level</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG</span>
<span class="token key attr-name">formatter</span><span class="token punctuation">=</span><span class="token value attr-value">sampleFormatter</span>
<span class="token key attr-name">args</span><span class="token punctuation">=</span><span class="token value attr-value">(sys.stdout,)</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">formatter_sampleFormatter</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">format</span><span class="token punctuation">=</span><span class="token value attr-value">%(asctime)s - %(name)s - %(levelname)s - %(message)s</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the above file, there are two loggers, one handler, and one formatter. After their names are defined, they are configured by adding the words logger, handler, and formatter before their names separated by an underscore.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging
<span class="token keyword">import</span> logging<span class="token punctuation">.</span>config

logging<span class="token punctuation">.</span>config<span class="token punctuation">.</span>fileConfig<span class="token punctuation">(</span>fname<span class="token operator">=</span><span class="token string">&#39;config.ini&#39;</span><span class="token punctuation">,</span> disable_existing_loggers<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># Get the logger specified in the file</span>
logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>

logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;This is a debug message&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="yaml-configuration-file" tabindex="-1"><a class="header-anchor" href="#yaml-configuration-file" aria-hidden="true">#</a> YAML Configuration File</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">1</span>
<span class="token key atrule">formatters</span><span class="token punctuation">:</span>
  <span class="token key atrule">simple</span><span class="token punctuation">:</span>
    <span class="token key atrule">format</span><span class="token punctuation">:</span> <span class="token string">&#39;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#39;</span>
<span class="token key atrule">handlers</span><span class="token punctuation">:</span>
  <span class="token key atrule">console</span><span class="token punctuation">:</span>
    <span class="token key atrule">class</span><span class="token punctuation">:</span> logging.StreamHandler
    <span class="token key atrule">level</span><span class="token punctuation">:</span> DEBUG
    <span class="token key atrule">formatter</span><span class="token punctuation">:</span> simple
    <span class="token key atrule">stream</span><span class="token punctuation">:</span> ext<span class="token punctuation">:</span>//sys.stdout
<span class="token key atrule">loggers</span><span class="token punctuation">:</span>
  <span class="token key atrule">sampleLogger</span><span class="token punctuation">:</span>
    <span class="token key atrule">level</span><span class="token punctuation">:</span> DEBUG
    <span class="token key atrule">handlers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>console<span class="token punctuation">]</span>
    <span class="token key atrule">propagate</span><span class="token punctuation">:</span> no
<span class="token key atrule">root</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span> DEBUG
  <span class="token key atrule">handlers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>console<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Loading yaml file</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging
<span class="token keyword">import</span> logging<span class="token punctuation">.</span>config
<span class="token keyword">import</span> yaml

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;config.yaml&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    config <span class="token operator">=</span> yaml<span class="token punctuation">.</span>safe_load<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    logging<span class="token punctuation">.</span>config<span class="token punctuation">.</span>dictConfig<span class="token punctuation">(</span>config<span class="token punctuation">)</span>

logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>

logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;This is a debug message&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function v(m,h){const a=i("ExternalLinkIcon");return l(),p("div",null,[n("p",null,[n("a",r,[s("https://realpython.com/python-logging/"),e(a)])]),u,n("p",null,[n("a",d,[s("More details click here"),e(a)]),g,s(" Some of the commonly used parameters for basicConfig() are the following:")]),k])}const y=o(c,[["render",v],["__file","logging.html.vue"]]);export{y as default};
