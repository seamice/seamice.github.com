import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as k,c as d,e as p,w as a,b as n,d as s,f as l}from"./app-0083b417.js";const m={},b=n("h2",{id:"instruction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#instruction","aria-hidden":"true"},"#"),s(" Instruction")],-1),v=n("p",null,"Fast vectorised array operations for data munging and cleaning, subsetting and filtering, transformation, and any other kinds of computations.",-1),h=n("p",null,"Efficient descriptive statistics and aggregating/summarising data.",-1),g=n("p",null,"Data alignment and relational data manipulations for merging and joining together heterogeneous data sets.",-1),y=n("p",null,"Expressing conditional logic as array expressions instead of loops with if-elif-else branches",-1),x=n("p",null,"Groupwise data manipulations (aggregation, transformation, function application) â€“ useful for pandas!",-1),_=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" numpy "),n("span",{class:"token keyword"},"as"),s(` np

data `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),s(`
  `),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(` 
   `),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token builtin"},"type"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`
data

data `),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"10"),s(`
data `),n("span",{class:"token operator"},"*"),s(` data

`),n("span",{class:"token builtin"},"dir"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`

data`),n("span",{class:"token punctuation"},"."),s(`size
data`),n("span",{class:"token punctuation"},"."),s(`ndim
data`),n("span",{class:"token punctuation"},"."),s(`shape
data`),n("span",{class:"token punctuation"},"."),s(`dtype
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s(`
np`),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(`

np`),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
np`),n("span",{class:"token punctuation"},"."),s("ones"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

np`),n("span",{class:"token punctuation"},"."),s("empty"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

np`),n("span",{class:"token punctuation"},"."),s("arange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"15"),n("span",{class:"token punctuation"},")"),s(`

a `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("zeros"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
np`),n("span",{class:"token punctuation"},"."),s("ones_like"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),s(`

np`),n("span",{class:"token punctuation"},"."),s("ones"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},"."),s("shape"),n("span",{class:"token punctuation"},")"),s(`

np`),n("span",{class:"token punctuation"},"."),s("eye"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("a "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1.1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2.2"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3.3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
a`),n("span",{class:"token punctuation"},"."),s(`dtype

b `),n("span",{class:"token operator"},"="),s(" a"),n("span",{class:"token punctuation"},"."),s("astype"),n("span",{class:"token punctuation"},"("),s("np"),n("span",{class:"token punctuation"},"."),s("int64"),n("span",{class:"token punctuation"},")"),s(`
b`),n("span",{class:"token punctuation"},"."),s(`dtype

c `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"aaaaa"'),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("np"),n("span",{class:"token punctuation"},"."),s("string_"),n("span",{class:"token punctuation"},")"),s(`
c`),n("span",{class:"token punctuation"},"."),s(`dtype

c`),n("span",{class:"token punctuation"},"."),s("astype"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"float"),n("span",{class:"token punctuation"},")"),s(`

int_array `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("arange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(`
float_array `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},".2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},".27"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},".357"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
int_array`),n("span",{class:"token punctuation"},"."),s("astype"),n("span",{class:"token punctuation"},"("),s("float_array"),n("span",{class:"token punctuation"},"."),s("dtype"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("h2",{id:"slicing-and-indexing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#slicing-and-indexing","aria-hidden":"true"},"#"),s(" Slicing and Indexing")],-1),T=n("p",null,"Slicing in 1 D data",-1),F=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("arr "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("arange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("arr"),n("span",{class:"token punctuation"},")"),s(`

arr`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},"]"),s(`

arr`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"99"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("arr"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# Array slice is a view of the origianl array"),s(`
arr `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("arange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(`
arr
brr `),n("span",{class:"token operator"},"="),s(" arr"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},"]"),s(`
brr

arr`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"99"),s(`
arr
brr
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),B=n("p",null,"Indexing and Slicing in 2D",-1),z=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("arr2d "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
arr2d`),n("span",{class:"token punctuation"},"."),s(`shape
arr2d
arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s("        "),n("span",{class:"token comment"},"# the same as below"),s(`
arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`

arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s("           "),n("span",{class:"token comment"},"# you can skip later indecis (columns)"),s(`
arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`

arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s("        "),n("span",{class:"token comment"},"# for column, you have to mention first index"),s(`
arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`

arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"]"),s(`
arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`

arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),s(`
arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),s(`

arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s(`ndim
arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s(`ndim

arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s(`shape

a `),n("span",{class:"token operator"},"="),s(" arr2d"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),s(`
a`),n("span",{class:"token punctuation"},"."),s(`shape

arr2d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s(`shape
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("p",null,"Indexing and Slicing in nD, n > 2",-1),C=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("arr1d "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("arange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"12"),n("span",{class:"token punctuation"},")"),s(`
arr3d `),n("span",{class:"token operator"},"="),s(" arr1d"),n("span",{class:"token punctuation"},"."),s("reshape"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`

arr3d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`
arr3d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`
arr3d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"99"),s(`

arr3d`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("names "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'Belinda'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Malgorzata'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'John'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Belinda'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'John'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Jasper'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Jasper'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
colours `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'green'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'red'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'blue'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'yellow'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'brown'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'green'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'purple'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

names `),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},"'Belinda'"),s(`
colours`),n("span",{class:"token punctuation"},"["),s("names "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},"'Belinda'"),n("span",{class:"token punctuation"},"]"),s(`

colours2 `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'green'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'red'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'blue'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'yellow'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'brown'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'green'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'purple'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
                     `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'black'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'pink'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'pink'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'brown'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'white'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'red'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'orange'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

colours2`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(" names "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},"'Belinda'"),n("span",{class:"token punctuation"},"]"),s(`
colours2`),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" names "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},"'Belinda'"),n("span",{class:"token punctuation"},"]"),s(`
colours2`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),s(" names "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token string"},"'Belinda'"),n("span",{class:"token punctuation"},"]"),s(`
colours2`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"~"),n("span",{class:"token punctuation"},"("),s("names "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},"'Belinda'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token comment"},"### We can combine using & and |"),s(`
mask `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("names "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},"'Belinda'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token punctuation"},"("),s("names "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},"'Jasper'"),n("span",{class:"token punctuation"},")"),s(`
colours2`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),s(" mask"),n("span",{class:"token punctuation"},"]"),s(`


data `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"12"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"19"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
data

data`),n("span",{class:"token punctuation"},"["),s("data "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
data
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("p",null,[s("Fancy Indexing - using integer array as index"),n("br"),s(" Fancy indexing copies the data into a new array")],-1),N=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),s(`
x `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"list"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s(`
x `),n("span",{class:"token operator"},"="),s(" x "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"4"),s(`

arr `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("array"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("reshape"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s(`T
arr`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(`
arr`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(`


arr `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("arange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("reshape"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
arr

arr`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s("         "),n("span",{class:"token comment"},"# we got only for numbers "),s(`

arr`),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s("      "),n("span",{class:"token comment"},"# for 4 by 4 array"),s(`

`),n("span",{class:"token comment"},"### ix_() as an alternative"),s(`
arr`),n("span",{class:"token punctuation"},"["),s("np"),n("span",{class:"token punctuation"},"."),s("ix_"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=l(`<h2 id="some-numpy-methods" tabindex="-1"><a class="header-anchor" href="#some-numpy-methods" aria-hidden="true">#</a> Some numpy methods</h2><h3 id="reshape" tabindex="-1"><a class="header-anchor" href="#reshape" aria-hidden="true">#</a> Reshape</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
arr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transpose" tabindex="-1"><a class="header-anchor" href="#transpose" aria-hidden="true">#</a> Transpose</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>arr<span class="token punctuation">.</span>T
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="random-numbers" tabindex="-1"><a class="header-anchor" href="#random-numbers" aria-hidden="true">#</a> Random numbers</h3><p>arr = np.random.randn(6, 3)<br> arr</p><h3 id="dot-product" tabindex="-1"><a class="header-anchor" href="#dot-product" aria-hidden="true">#</a> Dot product</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>arr<span class="token punctuation">.</span>T<span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="high-dimentional-array" tabindex="-1"><a class="header-anchor" href="#high-dimentional-array" aria-hidden="true">#</a> high dimentional array</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
arr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transpose-1" tabindex="-1"><a class="header-anchor" href="#transpose-1" aria-hidden="true">#</a> transpose</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>arr<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># swapaxes </span>
arr<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="unary-ufuncs" tabindex="-1"><a class="header-anchor" href="#unary-ufuncs" aria-hidden="true">#</a> unary ufuncs</h3>`,14),E={href:"http://docs.scipy.org/doc/numpy/reference/ufuncs.html",target:"_blank",rel:"noopener noreferrer"},J=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>

np<span class="token punctuation">.</span>square<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>


<span class="token comment"># binary ufunc</span>
x <span class="token operator">=</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
np<span class="token punctuation">.</span>add<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>                  
np<span class="token punctuation">.</span>multiply<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
np<span class="token punctuation">.</span>divide<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>


<span class="token comment"># return of multiple arrays</span>
arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span>

np<span class="token punctuation">.</span>modf<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vectorisation" tabindex="-1"><a class="header-anchor" href="#vectorisation" aria-hidden="true">#</a> Vectorisation</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>points <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span> <span class="token comment"># 1000 equally spaced points</span>
xs<span class="token punctuation">,</span> ys <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>points<span class="token punctuation">,</span> points<span class="token punctuation">)</span>
ys

z <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>xs <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> ys <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span>
z


<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>z<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>colorbar<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;Image plot of $\\sqrt{x^2 + y^2}$&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conditional-logic" tabindex="-1"><a class="header-anchor" href="#conditional-logic" aria-hidden="true">#</a> Conditional logic</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>xarr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">1.3</span><span class="token punctuation">,</span> <span class="token number">1.4</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
yarr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2.1</span><span class="token punctuation">,</span> <span class="token number">2.2</span><span class="token punctuation">,</span> <span class="token number">2.3</span><span class="token punctuation">,</span> <span class="token number">2.4</span><span class="token punctuation">,</span> <span class="token number">2.5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
cond <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>x <span class="token keyword">if</span> c <span class="token keyword">else</span> y<span class="token punctuation">)</span> <span class="token keyword">for</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> c <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>xarr<span class="token punctuation">,</span> yarr<span class="token punctuation">,</span> cond<span class="token punctuation">)</span><span class="token punctuation">]</span>
result

result <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>cond<span class="token punctuation">,</span> xarr<span class="token punctuation">,</span> yarr<span class="token punctuation">)</span>
result


arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
arr

np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>arr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>

np<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span>

<span class="token comment"># Another example</span>

cond1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
cond2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cond1<span class="token punctuation">)</span>
result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> cond1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">and</span> cond2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>
        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> cond1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span> 
        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> cond2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span> 
        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
result


np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>cond1 <span class="token operator">&amp;</span> cond2<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>cond1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>cond2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="array-aggregations" tabindex="-1"><a class="header-anchor" href="#array-aggregations" aria-hidden="true">#</a> Array aggregations</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> 
arr

arr<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>                  <span class="token comment"># Column means</span>
arr<span class="token punctuation">.</span>std<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>                   <span class="token comment"># Column standard deviation</span>
arr<span class="token punctuation">.</span>median<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token comment"># Column medians</span>

np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>              <span class="token comment"># Column means</span>
np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>               <span class="token comment"># Column standard deviation</span>
np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token comment"># Column medians</span>


arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>arr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                   <span class="token comment"># Number of positive values</span>
<span class="token punctuation">(</span>arr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0.48</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="boolean-arrays" tabindex="-1"><a class="header-anchor" href="#boolean-arrays" aria-hidden="true">#</a> Boolean arrays</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bools <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
bools<span class="token punctuation">.</span><span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
bools<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="input-and-output" tabindex="-1"><a class="header-anchor" href="#input-and-output" aria-hidden="true">#</a> Input and Output</h2>`,10),V=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("arr "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("arange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(`
np`),n("span",{class:"token punctuation"},"."),s("save"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'some_array.npy'"),n("span",{class:"token punctuation"},","),s(" arr"),n("span",{class:"token punctuation"},")"),s("             "),n("span",{class:"token comment"},"# uncompressed binary"),s(`

np`),n("span",{class:"token punctuation"},"."),s("load"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'some_array.npy'"),n("span",{class:"token punctuation"},")"),s(`


np`),n("span",{class:"token punctuation"},"."),s("savez"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'array_archive.npz'"),n("span",{class:"token punctuation"},","),s(" a"),n("span",{class:"token operator"},"="),s("arr"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token operator"},"="),s("arr"),n("span",{class:"token operator"},"*"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`

arch `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("load"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'array_archive.npz'"),n("span",{class:"token punctuation"},")"),s("        "),n("span",{class:"token comment"},"# zip archive"),s(`
arch`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'b'"),n("span",{class:"token punctuation"},"]"),s(`
arch`),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'a'"),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# more on reading files in pandas"),s(`
arr `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("arange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"12"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("reshape"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),s(`
np`),n("span",{class:"token punctuation"},"."),s("savetxt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'array_ex.txt'"),n("span",{class:"token punctuation"},","),s(" arr"),n("span",{class:"token punctuation"},","),s(" delimiter"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'=='"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"del"),s(` arr
arr `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("loadtxt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'array_ex.txt'"),n("span",{class:"token punctuation"},","),s(" delimiter"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'=='"),n("span",{class:"token punctuation"},")"),s(`

arr `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("genfromtxt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'array_ex.txt'"),n("span",{class:"token punctuation"},","),s(" delimiter"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'=='"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=n("h2",{id:"random-number-generation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#random-number-generation","aria-hidden":"true"},"#"),s(" Random Number Generation")],-1),L=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("arr "),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("random"),n("span",{class:"token punctuation"},"."),s("normal"),n("span",{class:"token punctuation"},"("),s("size"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"100000"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token builtin"},"dir"),n("span",{class:"token punctuation"},"("),s("np"),n("span",{class:"token punctuation"},"."),s("random"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),$=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(` random
steps `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1000"),s(`
position `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
walk `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("position"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),s("steps"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    step `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token keyword"},"if"),s(" random"),n("span",{class:"token punctuation"},"."),s("randint"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(`
    position `),n("span",{class:"token operator"},"+="),s(` step
    walk`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("position"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(` plt
`),n("span",{class:"token comment"},"# %matplotlib inline"),s(`

plt`),n("span",{class:"token punctuation"},"."),s("plot"),n("span",{class:"token punctuation"},"("),s("walk"),n("span",{class:"token punctuation"},")"),s(`
plt`),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Simple random walk with +1/-1 steps"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"# plt.show()"),s(`


steps `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1000"),s(`
draws `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("random"),n("span",{class:"token punctuation"},"."),s("choice"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" size"),n("span",{class:"token operator"},"="),s("steps"),n("span",{class:"token punctuation"},")"),s(`
walk `),n("span",{class:"token operator"},"="),s(" draws"),n("span",{class:"token punctuation"},"."),s("cumsum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(` plt
`),n("span",{class:"token comment"},"# %matplotlib inline"),s(`

plt`),n("span",{class:"token punctuation"},"."),s("plot"),n("span",{class:"token punctuation"},"("),s("walk"),n("span",{class:"token punctuation"},")"),s(`
plt`),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Simple random walk with +1/-1 steps"'),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("nwalks "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5000"),s(`
nsteps `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1000"),s(`
draws `),n("span",{class:"token operator"},"="),s(" np"),n("span",{class:"token punctuation"},"."),s("random"),n("span",{class:"token punctuation"},"."),s("choice"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" size"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),s("nwalks"),n("span",{class:"token punctuation"},","),s(" nsteps"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
walks `),n("span",{class:"token operator"},"="),s(" draws"),n("span",{class:"token punctuation"},"."),s("cumsum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`

walks`),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"max"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
walks`),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"min"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

hits30 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("np"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"abs"),n("span",{class:"token punctuation"},"("),s("walks"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token number"},"30"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
hits30`),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"sum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

crossing_times `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("np"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"abs"),n("span",{class:"token punctuation"},"("),s("walks"),n("span",{class:"token punctuation"},"["),s("hits30"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token number"},"30"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("argmax"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
crossing_times`),n("span",{class:"token punctuation"},"."),s("mean"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"import"),s(" matplotlib"),n("span",{class:"token punctuation"},"."),s("pyplot "),n("span",{class:"token keyword"},"as"),s(` plt
`),n("span",{class:"token comment"},"# %matplotlib inline"),s(`

plt`),n("span",{class:"token punctuation"},"."),s("plot"),n("span",{class:"token punctuation"},"("),s("walks"),n("span",{class:"token punctuation"},"."),s("T"),n("span",{class:"token punctuation"},")"),s(`
plt`),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},"("),s("nwalks"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'" simple random walks with +1/-1 steps"'),n("span",{class:"token punctuation"},")"),s(`

plt`),n("span",{class:"token punctuation"},"."),s("hist"),n("span",{class:"token punctuation"},"("),s("walks"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"999"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" bins"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"53"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# "),s(`
plt`),n("span",{class:"token punctuation"},"."),s("title"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Distribution for the very last step"'),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function M(O,U){const c=o("Tabs"),i=o("ExternalLinkIcon"),u=o("CodeTabs");return k(),d("div",null,[b,v,h,g,y,x,p(c,{id:"18",data:[{id:"Simple code"},{id:"Create numpy array"},{id:"numpy data types and conversions"}]},{title0:a(({value:t,isActive:e})=>[s("Simple code")]),title1:a(({value:t,isActive:e})=>[s("Create numpy array")]),title2:a(({value:t,isActive:e})=>[s("numpy data types and conversions")]),tab0:a(({value:t,isActive:e})=>[_]),tab1:a(({value:t,isActive:e})=>[w]),tab2:a(({value:t,isActive:e})=>[f]),_:1}),A,p(c,{id:"32",data:[{id:"1D"},{id:"2D"},{id:"more than 2D"},{id:"Boolean indexing"},{id:"Facy Indexing"}]},{title0:a(({value:t,isActive:e})=>[s("1D")]),title1:a(({value:t,isActive:e})=>[s("2D")]),title2:a(({value:t,isActive:e})=>[s("more than 2D")]),title3:a(({value:t,isActive:e})=>[s("Boolean indexing")]),title4:a(({value:t,isActive:e})=>[s("Facy Indexing")]),tab0:a(({value:t,isActive:e})=>[T,F]),tab1:a(({value:t,isActive:e})=>[B,z]),tab2:a(({value:t,isActive:e})=>[S,C]),tab3:a(({value:t,isActive:e})=>[D]),tab4:a(({value:t,isActive:e})=>[I,N]),_:1}),q,n("p",null,[n("a",E,[s("Universal functions (ufuncs) - element-wise transformation"),p(i)])]),J,p(u,{id:"116",data:[{id:"Binary File"},{id:"Text File"}]},{title0:a(({value:t,isActive:e})=>[s("Binary File")]),title1:a(({value:t,isActive:e})=>[s("Text File")]),tab0:a(({value:t,isActive:e})=>[V]),tab1:a(({value:t,isActive:e})=>[R]),_:1}),G,p(u,{id:"127",data:[{id:"generate"},{id:"Simple random walk"},{id:"Simulating many random walks"}]},{title0:a(({value:t,isActive:e})=>[s("generate")]),title1:a(({value:t,isActive:e})=>[s("Simple random walk")]),title2:a(({value:t,isActive:e})=>[s("Simulating many random walks")]),tab0:a(({value:t,isActive:e})=>[L]),tab1:a(({value:t,isActive:e})=>[$]),tab2:a(({value:t,isActive:e})=>[j]),_:1})])}const K=r(m,[["render",M],["__file","Numpy.html.vue"]]);export{K as default};
