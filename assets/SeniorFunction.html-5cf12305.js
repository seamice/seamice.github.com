import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e}from"./app-4cbcc673.js";const t={},p=e(`<h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> Filter</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># returns True if the argument passed is even</span>

<span class="token keyword">def</span> <span class="token function">check_even</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> number <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
          <span class="token keyword">return</span> <span class="token boolean">True</span>  
    <span class="token keyword">return</span> <span class="token boolean">False</span>
numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>

<span class="token comment"># if an element passed to check_even() returns True, select it</span>
even_numbers_iterator <span class="token operator">=</span> <span class="token builtin">filter</span><span class="token punctuation">(</span>check_even<span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>

<span class="token comment"># converting to list</span>
even_numbers <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>even_numbers_iterator<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>even_numbers<span class="token punctuation">)</span>
<span class="token comment"># Output: [2, 4, 6, 8, 10]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reduce" tabindex="-1"><a class="header-anchor" href="#reduce" aria-hidden="true">#</a> Reduce</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># importing functools for reduce() </span>
<span class="token keyword">import</span> functools 

<span class="token comment"># initializing list </span>
lis <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> 

<span class="token comment"># using reduce to compute sum of list </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The sum of the list elements is : &quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>functools<span class="token punctuation">.</span><span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a<span class="token operator">+</span>b<span class="token punctuation">,</span> lis<span class="token punctuation">)</span><span class="token punctuation">)</span> 

<span class="token comment"># using reduce to compute maximum element from list </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The maximum element of the list is : &quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>functools<span class="token punctuation">.</span><span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a <span class="token keyword">if</span> a <span class="token operator">&gt;</span> b <span class="token keyword">else</span> b<span class="token punctuation">,</span> lis<span class="token punctuation">)</span><span class="token punctuation">)</span> 

<span class="token comment"># Reduce function has an optional parameter on the third position stands for the initial value</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>

<span class="token comment"># returns the square of a number</span>
<span class="token keyword">def</span> <span class="token function">square</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> number <span class="token operator">*</span> number

<span class="token comment"># apply square() to each item of the numbers list</span>
squared_numbers_iterator <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span>square<span class="token punctuation">,</span> numbers<span class="token punctuation">)</span>

<span class="token comment"># converting to list</span>
squared_numbers <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>squared_numbers_iterator<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>squared_numbers<span class="token punctuation">)</span>

<span class="token comment"># Output: [4, 16, 36, 64, 100]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","SeniorFunction.html.vue"]]);export{d as default};
